package io.github.mjedwabn.github.adventofcode2018.day12

import spock.lang.Specification


class MainKtTest extends Specification {
    def "sample plantation"() {
        def plantation = new Plantation(initialState, rules)

        expect:
        plantation.grow(20)
        plantation.sumOfNumbersOfAllPotsWhichContainAPlant == sum

        where:
        initialState                                                                                          | rules         || sum
        "#..#.#..##......###...###"                                                                           | ["...##": "#",
                                                                                                                 "..#..": "#",
                                                                                                                 ".#...": "#",
                                                                                                                 ".#.#.": "#",
                                                                                                                 ".#.##": "#",
                                                                                                                 ".##..": "#",
                                                                                                                 ".####": "#",
                                                                                                                 "#.#.#": "#",
                                                                                                                 "#.###": "#",
                                                                                                                 "##.#.": "#",
                                                                                                                 "##.##": "#",
                                                                                                                 "###..": "#",
                                                                                                                 "###.#": "#",
                                                                                                                 "####.": "#"] | 325
        "##..#..##....#..#..#..##.#.###.######..#..###.#.#..##.###.#.##..###..#.#..#.##.##..###.#.#...#.##.." |
                ["#####": "#",
                 "##.##": "#",
                 "..##.": ".",
                 "..#.#": ".",
                 "..###": "#",
                 "#..##": "#",
                 ".#.#.": "#",
                 "#.#.#": "#",
                 "#.##.": ".",
                 "####.": ".",
                 "#..#.": "#",
                 "..#..": ".",
                 ".####": ".",
                 "##.#.": "#",
                 "#...#": ".",
                 ".##.#": "#",
                 "#.###": ".",
                 ".#..#": "#",
                 ".#...": "#",
                 ".##..": "#",
                 ".###.": ".",
                 "#....": ".",
                 "###..": ".",
                 "##..#": ".",
                 "...##": "#",
                 "##...": ".",
                 ".....": ".",
                 "....#": ".",
                 "###.#": "#",
                 "#.#..": ".",
                 ".#.##": "#",
                 "...#.": "."]                                                                                                || 3
    }

    def "sample plantation 20"() {
        def plantation = new Plantation(initialState, rules)

        expect:
        plantation.grow(20)
        plantation.sumOfNumbersOfAllPotsWhichContainAPlant == sum

        where:
        initialState                                                                                          | rules         || sum
        "##..#..##....#..#..#..##.#.###.######..#..###.#.#..##.###.#.##..###..#.#..#.##.##..###.#.#...#.##.." |
                ["#####": "#",
                 "##.##": "#",
                 "..##.": ".",
                 "..#.#": ".",
                 "..###": "#",
                 "#..##": "#",
                 ".#.#.": "#",
                 "#.#.#": "#",
                 "#.##.": ".",
                 "####.": ".",
                 "#..#.": "#",
                 "..#..": ".",
                 ".####": ".",
                 "##.#.": "#",
                 "#...#": ".",
                 ".##.#": "#",
                 "#.###": ".",
                 ".#..#": "#",
                 ".#...": "#",
                 ".##..": "#",
                 ".###.": ".",
                 "#....": ".",
                 "###..": ".",
                 "##..#": ".",
                 "...##": "#",
                 "##...": ".",
                 ".....": ".",
                 "....#": ".",
                 "###.#": "#",
                 "#.#..": ".",
                 ".#.##": "#",
                 "...#.": "."]                                                                                                || 3793
    }


    def "sample plantation 50000000000"() {
        def plantation = new Plantation(initialState, rules)

        expect:
        plantation.grow(400)
        plantation.sumOfNumbersOfAllPotsWhichContainAPlant == sum

        where:
        initialState                                                                                          | rules         || sum
        "##..#..##....#..#..#..##.#.###.######..#..###.#.#..##.###.#.##..###..#.#..#.##.##..###.#.#...#.##.." |
                ["#####": "#",
                 "##.##": "#",
                 "..##.": ".",
                 "..#.#": ".",
                 "..###": "#",
                 "#..##": "#",
                 ".#.#.": "#",
                 "#.#.#": "#",
                 "#.##.": ".",
                 "####.": ".",
                 "#..#.": "#",
                 "..#..": ".",
                 ".####": ".",
                 "##.#.": "#",
                 "#...#": ".",
                 ".##.#": "#",
                 "#.###": ".",
                 ".#..#": "#",
                 ".#...": "#",
                 ".##..": "#",
                 ".###.": ".",
                 "#....": ".",
                 "###..": ".",
                 "##..#": ".",
                 "...##": "#",
                 "##...": ".",
                 ".....": ".",
                 "....#": ".",
                 "###.#": "#",
                 "#.#..": ".",
                 ".#.##": "#",
                 "...#.": "."]                                                                                                || 3793
    }
}
